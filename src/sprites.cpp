//
//  sprites.cpp
//  EnTT Example
//
//  Created by Indi Kernick on 17/9/18.
//  Copyright Â© 2018 Indi Kernick. All rights reserved.
//

#include "sprites.hpp"

// Imagine we're loading these from a files

namespace {

template <size_t Size>
void spriteStr(FrameBuf &buf, const char (&str)[Size]) {
  assert(buf.area() + 1 == Size);
  for (size_t i = 0; i != Size - 1; ++i) {
  	buf[i].ch = str[i];
  }
}

}

FrameBuf makePlayerSprite() {
  FrameBuf player{3, 3};
  const char str[3 * 3 + 1] = {
    " ##"
   	"## "
    " ##"
  };
  spriteStr(player, str);
  for (Cell &cell : player) {
    cell.color = color_rgb(5, 5, 0);
  }
  return player;
}

namespace {

FrameBuf makeGhostSprite(const ColIdx color) {
  FrameBuf ghost{3, 3};
  const char str[3 * 3 + 1] = {
  	"/#\\"
  	"*#*"
  	"VVV"
  };
  spriteStr(ghost, str);
  for (Cell &cell : ghost) {
    cell.color = color;
  }
  ghost(0, 1).color = color_sys(Color::white);
  ghost(2, 1).color = color_sys(Color::white);
  return ghost;
}

}

FrameBuf makeBlinkySprite() {
  return makeGhostSprite(color_rgb(5, 0, 0));
}

FrameBuf makePinkySprite() {
  return makeGhostSprite(color_rgb(5, 2, 5));
}

FrameBuf makeInkySprite() {
  return makeGhostSprite(color_rgb(0, 5, 5));
}

FrameBuf makeClydeSprite() {
  return makeGhostSprite(color_rgb(5, 3, 0));
}

/*
###################
#        #        #
# ## ### # ### ## #
# ## ### # ### ## #
#                 #
# ## # ##### # ## #
#    #   #   #    #
#### ### # ### ####
   # #       # #
#### # ##### # ####
       #   #
#### # ##### # ####
   # #       # #    
#### # ##### # ####
#        #        #
# ## ### # ### ## #
#  #           #  #
## # # ##### # # ##
#    #   #   #    #
# ###### # ###### #
#                 #
###################

19, 22
*/

FrameBuf makeMazeSprite() {
  FrameBuf maze{19*3, 22*3};
  const char str[19*3 * 22*3 + 1] = {
  	"/-------------------------------------------------------\\"
  	"|                                                       |"
  	"| /------------------------\\ /------------------------\\ |"

  	"| |                        | |                        | |"
  	"| |                        | |                        | |"
  	"| |                        | |                        | |"

  	"| |   /----\\   /-------\\   | |   /-------\\   /----\\   | |"
  	"| |   |    |   |       |   | |   |       |   |    |   | |"
  	"| |   |    |   |       |   | |   |       |   |    |   | |"

  	"| |   |    |   |       |   | |   |       |   |    |   | |"
  	"| |   |    |   |       |   | |   |       |   |    |   | |" 
  	"| |   \\----/   \\-------/   \\-/   \\-------/   \\----/   | |"

    "| |                                                   | |"
   	"| |                                                   | |"
   	"| |                                                   | |"

   	"| |   /----\\   /-\\   /-------------\\   /-\\   /----\\   | |"
   	"| |   |    |   | |   |             |   | |   |    |   | |"
   	"| |   \\----/   | |   \\-----\\ /-----/   | |   \\----/   | |"

   	"| |            | |         | |         | |            | |"
   	"| |            | |         | |         | |            | |"
   	"| |            | |         | |         | |            | |"

   	"| \\--------\\   | \\-----\\   | |   /-----/ |   /--------/ |"
   	"|          |   |       |   | |   |       |   |          |"
   	"\\--------\\ |   | /-----/   \\-/   \\-----\\ |   | /--------/"

    "         | |   | |                     | |   | |         "
    "         | |   | |                     | |   | |         "
    "         | |   | |                     | |   | |         "

    "---------/ |   | |   /-------------\\   | |   | \\---------"
    "           |   | |   |             |   | |   |           "
    "-----------/   \\-/   | /---------\\ |   \\-/   \\-----------"

    "                     | |         | |                     "
    "                     | |         | |                     "
    "                     | |         | |                     "

    "-----------\\   /-\\   | \\---------/ |   /-\\   /-----------"
    "           |   | |   |             |   | |   |           "
    "---------\\ |   | |   \\-------------/   | |   | /---------"

    "         | |   | |                     | |   | |         "
    "         | |   | |                     | |   | |         "
    "         | |   | |                     | |   | |         "

    "/--------/ |   | |   /-------------\\   | |   | \\--------\\"
    "|          |   | |   |             |   | |   |          |"
    "| /--------/   \\-/   \\-----\\ /-----/   \\-/   \\--------\\ |"

    "| |                        | |                        | |"
    "| |                        | |                        | |"
    "| |                        | |                        | |"

    "| |   /----\\   /-------\\   | |   /-------\\   /----\\   | |"
    "| |   |    |   |       |   | |   |       |   |    |   | |"
    "| |   \\--\\ |   \\-------/   \\-/   \\-------/   | /--/   | |"

    "| |      | |                                 | |      | |"
    "| |      | |                                 | |      | |"
    "| |      | |                                 | |      | |"

    "| \\--\\   | |   /-\\   /-------------\\   /-\\   | |   /--/ |"
    "|    |   | |   | |   |             |   | |   | |   |    |"
    "| /--/   \\-/   | |   \\-----\\ /-----/   | |   \\-/   \\--\\ |"

    "| |            | |         | |         | |            | |"
    "| |            | |         | |         | |            | |"
    "| |            | |         | |         | |            | |"

    "| |   /--------/ \\-----\\   | |   /-----/ \\--------\\   | |"
    "| |   |                |   | |   |                |   | |"
    "| |   \\----------------/   \\-/   \\----------------/   | |"

    "| |                                                   | |"
    "| |                                                   | |"
    "| |                                                   | |"

    "| \\---------------------------------------------------/ |"
    "|                                                       |"
    "\\-------------------------------------------------------/"
  };

  /*FrameBuf test{19, 22};
  const char str[] = {
  	"###################"
  	"#        #        #"
  	"# ## ### # ### ## #"
  	"# ## ### # ### ## #"
  	"#                 #"
  	"# ## # ##### # ## #"
  	"#    #   #   #    #"
  	"#### ### # ### ####"
  	"   # #       # #   "
  	"#### # ##### # ####"
  	"       #   #       "
  	"#### # ##### # ####"
  	"   # #       # #   "
  	"#### # ##### # ####"
  	"#        #        #"
  	"# ## ### # ### ## #"
  	"#  #           #  #"
  	"## # # ##### # # ##"
  	"#    #   #   #    #"
  	"# ###### # ###### #"
  	"#                 #"
  	"###################"
  };*/
  spriteStr(maze, str);
  for (Cell &cell : maze) {
  	cell.color = color_rgb(0, 0, 5);
  }
  for (Grid::Coord y = 0; y != 3; ++y) {
    for (Grid::Coord x = 0; x != 3; ++x) {
      maze(9 * 3 + x, 9 * 3 + y).color = color_sys(Color::white);
    }
  }  
  return maze;
}
